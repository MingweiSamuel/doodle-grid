{"mappings":"A,C,KEAO,IAAI,EAAW,EAAE,CACb,EAAU,GAInB,EDJe,CAAC,aAAa,iDAAiD,8CAA8C,8CAA8C,uBAAuB,uDAAuD,uDAAuD,sCAAsC,sCAAsC,qCAAqC,CCKha,EDJc,4BEAhB,IAAM,EAAmB,CACrB,OACG,AAAA,EAAS,GAAG,CAAC,AAAA,GAAQ,EAAK,OAAO,CAAC,MAAO,KAC/C,CAGD,eAAe,IACX,IAAM,EAAQ,MAAM,OAAO,IAAI,CAAC,EAChC,OAAM,EAAM,MAAM,CAAC,EACvB,CAEA,eAAe,IACX,IAAM,EAAO,MAAM,OAAO,IAAI,EAC9B,OAAM,QAAQ,GAAG,CACb,EAAK,GAAG,CAAC,AAAA,IACD,IAAQ,GACR,QAAQ,GAAG,CAAC,yBAA0B,GACtC,OAAO,MAAM,CAAC,IAEd,QAAQ,GAAG,CAAC,wBAAyB,EAE7C,GAER,CAEA,eAAe,EAAQ,CAAgB,EACnC,IAAM,EAAgB,MAAM,OAAO,KAAK,CAAC,EAAS,CAAE,aAAc,CAAA,CAAK,SAEvE,CADA,QAAQ,GAAG,CAAC,aAAc,EAAQ,GAAG,CAAE,MAAO,MAAQ,GAClD,AAAkB,KAAA,IAAlB,GACO,EAEA,MAAM,MAAM,EAE3B,CA7BA,QAAQ,GAAG,CAAC,kBAAmB,CAAE,iBAAA,EAAkB,QAAA,CAAQ,GA+B3D,iBAAiB,UAAW,AAAA,IACxB,QAAQ,GAAG,CAAC,WACZ,EAAE,SAAS,CAAC,IAChB,GAEA,iBAAiB,WAAY,AAAA,IACzB,QAAQ,GAAG,CAAC,YACZ,EAAE,SAAS,CAAC,IAChB,GAEA,iBAAiB,QAAS,AAAC,GAAkB,EAAE,WAAW,CAAC,EAAQ,EAAE,OAAO,IAI5E,iBAAiB,eAAgB,AAAC,IAC9B,QAAQ,GAAG,CAAC,gBAAiB,EAAE,GAAG,EAClC,EAAE,SAAS,CAAC,IAChB,E,C","sources":["<anon>","node_modules/@parcel/service-worker/runtime-16d806397586e927.js","node_modules/@parcel/service-worker/service-worker.js","src/service-worker.ts"],"sourcesContent":["(() => {\nvar $634fa512bc07a92d$exports = {};\nlet $2039b88b1be162b9$export$e538f94cc8cf4db8 = [];\nlet $2039b88b1be162b9$export$83d89fbfd8236492 = \"\";\nfunction $2039b88b1be162b9$export$c208e1278d7beb2(m, v) {\n    $2039b88b1be162b9$export$e538f94cc8cf4db8 = m;\n    $2039b88b1be162b9$export$83d89fbfd8236492 = v;\n}\n\n\nconst $634fa512bc07a92d$var$manifest = [\n    \"index.html\",\n    \"apple-touch-icon.3d779e23.png\",\n    \"favicon-32x32.52fc8606.png\",\n    \"favicon-16x16.6f6ea6b1.png\",\n    \"manifest.webmanifest\",\n    \"android-chrome-192x192.00f95b7f.png\",\n    \"android-chrome-512x512.ad51f5e3.png\",\n    \"index.aeee5389.css\",\n    \"index.96ed1a5a.css\",\n    \"index.0e48a30b.js\"\n];\nconst $634fa512bc07a92d$var$version = \"9c847960\";\n(0, $2039b88b1be162b9$export$c208e1278d7beb2)($634fa512bc07a92d$var$manifest, $634fa512bc07a92d$var$version);\n\nvar $0c81e46209371114$exports = {};\n\nconst $0c81e46209371114$var$manifestRelative = [\n    \".\",\n    ...(0, $2039b88b1be162b9$export$e538f94cc8cf4db8).map((file)=>file.replace(/^\\//, \"\"))\n];\nconsole.log(\"service-worker:\", {\n    manifestRelative: $0c81e46209371114$var$manifestRelative,\n    version: $2039b88b1be162b9$export$83d89fbfd8236492\n});\nasync function $0c81e46209371114$var$refreshCache() {\n    const cache = await caches.open((0, $2039b88b1be162b9$export$83d89fbfd8236492));\n    await cache.addAll($0c81e46209371114$var$manifestRelative);\n}\nasync function $0c81e46209371114$var$cleanCache() {\n    const keys = await caches.keys();\n    await Promise.all(keys.map((key)=>{\n        if (key !== (0, $2039b88b1be162b9$export$83d89fbfd8236492)) {\n            console.log(\"activate: clearing key\", key);\n            caches.delete(key);\n        } else console.log(\"activate: keeping key\", key);\n    }));\n}\nasync function $0c81e46209371114$var$onFetch(request) {\n    const cacheResponse = await caches.match(request, {\n        ignoreSearch: true\n    });\n    console.log(\"fetch: url\", request.url, \"hit\", null != cacheResponse);\n    if (cacheResponse !== undefined) return cacheResponse;\n    else return await fetch(request);\n}\naddEventListener(\"install\", (e)=>{\n    console.log(\"install\");\n    e.waitUntil($0c81e46209371114$var$refreshCache());\n});\naddEventListener(\"activate\", (e)=>{\n    console.log(\"activate\");\n    e.waitUntil($0c81e46209371114$var$cleanCache());\n});\naddEventListener(\"fetch\", (e)=>e.respondWith($0c81e46209371114$var$onFetch(e.request)));\naddEventListener(\"periodicsync\", (e)=>{\n    console.log(\"periodicsync:\", e.tag);\n    e.waitUntil($0c81e46209371114$var$refreshCache());\n});\n\n})();\n//# sourceMappingURL=service-worker.js.map\n","import {_register} from '@parcel/service-worker';\nconst manifest = [\"index.html\",\"apple-touch-icon.3d779e23.png\",\"favicon-32x32.52fc8606.png\",\"favicon-16x16.6f6ea6b1.png\",\"manifest.webmanifest\",\"android-chrome-192x192.00f95b7f.png\",\"android-chrome-512x512.ad51f5e3.png\",\"index.aeee5389.css\",\"index.96ed1a5a.css\",\"index.0e48a30b.js\"];\nconst version = \"9c847960\";\n_register(manifest, version);\n","export let manifest = [];\nexport let version = '';\n\n// Called by the runtime.\nexport function _register(m, v) {\n  manifest = m;\n  version = v;\n}\n","import { manifest, version } from '@parcel/service-worker';\n\nconst manifestRelative = [\n    '.',\n    ...manifest.map(file => file.replace(/^\\//, '')),\n]\nconsole.log('service-worker:', { manifestRelative, version });\n\nasync function refreshCache() {\n    const cache = await caches.open(version);\n    await cache.addAll(manifestRelative);\n}\n\nasync function cleanCache() {\n    const keys = await caches.keys();\n    await Promise.all(\n        keys.map(key => {\n            if (key !== version) {\n                console.log('activate: clearing key', key);\n                caches.delete(key);\n            } else {\n                console.log('activate: keeping key', key);\n            }\n        })\n    );\n}\n\nasync function onFetch(request: Request): Promise<Response> {\n    const cacheResponse = await caches.match(request, { ignoreSearch: true });\n    console.log('fetch: url', request.url, 'hit', null != cacheResponse);\n    if (cacheResponse !== undefined) {\n        return cacheResponse;\n    } else {\n        return await fetch(request);\n    }\n}\n\naddEventListener('install', e => {\n    console.log('install');\n    e.waitUntil(refreshCache());\n});\n\naddEventListener('activate', e => {\n    console.log('activate');\n    e.waitUntil(cleanCache());\n});\n\naddEventListener('fetch', (e: FetchEvent) => e.respondWith(onFetch(e.request)));\n\n/// https://developer.mozilla.org/en-US/docs/Web/API/PeriodicSyncEvent\ntype PeriodicSyncEvent = { tag: string } & ExtendableEvent;\naddEventListener('periodicsync', (e: PeriodicSyncEvent) => {\n    console.log('periodicsync:', e.tag);\n    e.waitUntil(refreshCache());\n});\n"],"names":["$2039b88b1be162b9$export$e538f94cc8cf4db8","$2039b88b1be162b9$export$83d89fbfd8236492","$0c81e46209371114$var$manifestRelative","map","file","replace","$0c81e46209371114$var$refreshCache","cache","caches","open","addAll","$0c81e46209371114$var$cleanCache","keys","Promise","all","key","console","log","delete","$0c81e46209371114$var$onFetch","request","cacheResponse","match","ignoreSearch","url","undefined","fetch","manifestRelative","version","addEventListener","e","waitUntil","respondWith","tag"],"version":3,"file":"service-worker.js.map"}